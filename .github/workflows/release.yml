name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'release'
        type: choice
        options:
          - release
          - beta
      beta_version:
        description: 'Beta version suffix (e.g., beta.1, beta.2)'
        required: false
        default: 'beta.1'

jobs:
  ci:
    uses: ./.github/workflows/ci.yml

  build_and_release:
    needs: ci
    permissions:
      contents: write
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Determine release version and type
        id: release_info
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref_type }}" == "tag" ]]; then
            # Extract version from tag (remove 'v' prefix)
            TAG_VERSION="${{ github.ref_name }}"
            RELEASE_VERSION="${TAG_VERSION#v}"
            echo "source=tag" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # Get version from package.json for manual releases
            PACKAGE_VERSION=$(node -p "require('./package.json').version")
            if [[ "${{ github.event.inputs.release_type }}" == "beta" ]]; then
              RELEASE_VERSION="${PACKAGE_VERSION}-${{ github.event.inputs.beta_version }}"
            else
              RELEASE_VERSION="$PACKAGE_VERSION"
            fi
            echo "source=manual" >> $GITHUB_OUTPUT
          fi

          # Determine if it's a prerelease
          if [[ "$RELEASE_VERSION" =~ (beta|alpha|rc|b[0-9]+) ]]; then
            IS_PRERELEASE="true"
            echo "type=prerelease" >> $GITHUB_OUTPUT
          else
            IS_PRERELEASE="false"
            echo "type=release" >> $GITHUB_OUTPUT
          fi

          echo "version=$RELEASE_VERSION" >> $GITHUB_OUTPUT
          echo "is_prerelease=$IS_PRERELEASE" >> $GITHUB_OUTPUT

          echo "Release version: $RELEASE_VERSION"
          echo "Is prerelease: $IS_PRERELEASE"
          echo "Source: ${{ github.event_name }}"

      # - name: Generate release notes
      #   id: release_notes
      #   run: |
      #     NOTES="## Changes in v${{ steps.release_info.outputs.version }}
      #
      #     ### What's Changed
      #     - Built from commit: ${{ github.sha }}
      #     - Build timestamp: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
      #
      #     ### Installation
      #     1. Download the \`simple-inventory-card.js\` file
      #     2. Copy to \`/config/www/community/simple-inventory-card/\`
      #     3. Add to Lovelace resources:
      #        \`\`\`yaml
      #        resources:
      #          - url: /local/community/simple-inventory-card/simple-inventory-card.js
      #            type: module
      #        \`\`\`
      #
      #     ### Verification
      #     - File size: $(wc -c < ./dist/simple-inventory-card.js) bytes
      #     - SHA256: $(sha256sum ./dist/simple-inventory-card.js | cut -d' ' -f1)"
      #
      #     echo "notes<<EOF" >> $GITHUB_OUTPUT
      #     echo "$NOTES" >> $GITHUB_OUTPUT
      #     echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ steps.release_info.outputs.version }}
          file: ./dist/simple-inventory-card.js
          asset_name: simple-inventory-card.js
          overwrite: true
          prerelease: ${{ steps.release_info.outputs.is_prerelease }}
          release_name: ${{ steps.release_info.outputs.type == 'prerelease' && format('v{0} (Pre-release)', steps.release_info.outputs.version) || format('v{0}', steps.release_info.outputs.version) }}
          body: ${{ steps.release_notes.outputs.notes }}
